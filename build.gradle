//It all starts here
buildscript {
  repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.yakworks:gradle-plugins:1.1.14"
  }
}

apply plugin: 'yakworks.shipyak' //our opinionated defaults for gradle groovy & grails projects

subprojects {

  repositories {
    //yakworks.grails-plugin adds the repos we need
    maven { url "https://repo.9ci.com/oss-snapshots" }
  }

  plugins.withId('java') {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    dependencies {
      compile "org.springframework.boot:spring-boot-starter-logging"
      compile "org.springframework.boot:spring-boot-autoconfigure"
      compile "org.grails:grails-core"
      compile "org.springframework.boot:spring-boot-starter-tomcat"

      compile "org.grails:grails-web-boot"

      compile "org.grails:grails-logging"
      compile "org.grails:grails-plugin-databinding"
      compile "org.grails:grails-plugin-i18n"
      compile "org.grails:grails-plugin-interceptors"
      // compile "org.grails:grails-plugin-rest"
      compile "org.grails:grails-plugin-services"
      compile "org.grails.plugins:cache"
      compile "org.grails.plugins:events"

      //This is needed for converters until grails4
      compile 'org.grails.plugins:grails-java8:1.2.3'
      // hibernate
      compile "org.grails.plugins:hibernate5"
      compile "org.hibernate:hibernate-core:$versionHibernate"
      compile "org.hibernate:hibernate-ehcache:$versionHibernate"

      testRuntime "com.h2database:h2"
      testRuntime "com.zaxxer:HikariCP:3.4.5"

      testCompile "org.grails:grails-gorm-testing-support"
      testCompile "org.grails:grails-web-testing-support"
      testCompile "org.grails:grails-datastore-rest-client"
      testCompile "org.grails.plugins:geb"
      testCompile "org.grails.plugins:build-test-data:$versionBuildTestData"
      testCompile "org.grails:views-json-testing-support:$versionViews"
      testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
      testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
      testRuntime "org.seleniumhq.selenium:selenium-api:3.6.0"

      configurations {
        testCompile.extendsFrom compileOnly //includes the compileOnly in tests too so we don't have to list twice
        // all {
        //   resolutionStrategy.cacheChangingModulesFor 1, 'seconds' //when changing = true this sets the cache time
        // }
      }

      //sets the path to sys properties so we can use it find grails-app/conf during AST
      //audit trail needs it one way and gorm-tools another
      plugins.withId('groovy') {
        compileGroovy {
          groovyOptions.fork = true
          def prjDir = '-Dgradle.projectDir=' + project.projectDir.absolutePath
          def auditTrail = '-Dmodule.pathr=' + project.projectDir.absolutePath
          groovyOptions.forkOptions.jvmArgs = [prjDir, auditTrail]
        }
      }
    }
  }
  // configurations {
  //   testCompile.extendsFrom compileOnly //includes the compileOnly in tests too so we don't have to list twice
  //   all {
  //     resolutionStrategy.cacheChangingModulesFor 1, 'seconds' //when changing = true this sets the cache time
  //   }
  // }

  //sets the path to sys properties so we can use it find grails-app/conf during AST
  // plugins.withId('groovy') {
  //   compileGroovy {
  //     groovyOptions.fork = true
  //     groovyOptions.forkOptions.jvmArgs = ['-Dgradle.projectDir=' + project.projectDir.absolutePath]
  //   }
  // }
}

// ext.codenarcRuleset= '''
//   getRule('Println').enabled = false
//   getRule('AbcMetric').enabled = false
//   getRule('CatchRuntimeException').enabled = false
// '''
